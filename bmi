{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [],
   "source": [
    "from matplotlib import pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv(\"bmi.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    index  gender\n",
      "0      28    male\n",
      "1     128  female\n",
      "2     172    male\n",
      "3     198  female\n",
      "4     232  female\n",
      "5     250    male\n",
      "6     380  female\n",
      "7     410    male\n",
      "8     412  female\n",
      "9     428  female\n",
      "10    680  female\n",
      "11    821    male\n",
      "12    950    male\n",
      "13   1029  female\n",
      "14   1074  female\n",
      "15   1085  female\n",
      "16   1133  female\n",
      "17   1205    male\n",
      "18   1226    male\n",
      "19   1286  female\n",
      "20\n"
     ]
    }
   ],
   "source": [
    "df=df.dropna()\n",
    "bmi = df['bmi']\n",
    "df\n",
    "underweightdf=df.loc[bmi<18.5]['gender'].reset_index(name='gender')\n",
    "print(underweightdf)\n",
    "underweightcount=underweightdf['index'].count()\n",
    "print(underweightcount)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     index  gender\n",
      "0        3    male\n",
      "1       15    male\n",
      "2       17    male\n",
      "3       26  female\n",
      "4       35    male\n",
      "..     ...     ...\n",
      "216   1304    male\n",
      "217   1306  female\n",
      "218   1314  female\n",
      "219   1316  female\n",
      "220   1328  female\n",
      "\n",
      "[221 rows x 2 columns]\n",
      "221\n"
     ]
    }
   ],
   "source": [
    "normalweightdf=df.loc[(bmi>18.5)&(bmi<24.9)]['gender'].reset_index(name='gender')\n",
    "print(normalweightdf)\n",
    "normalweightcount=normalweightdf['index'].count()\n",
    "print(normalweightcount)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      index  gender\n",
      "0         0  female\n",
      "1         1    male\n",
      "2         2    male\n",
      "3         4    male\n",
      "4         5  female\n",
      "...     ...     ...\n",
      "1091   1333    male\n",
      "1092   1334  female\n",
      "1093   1335  female\n",
      "1094   1336  female\n",
      "1095   1337  female\n",
      "\n",
      "[1096 rows x 2 columns]\n",
      "1096\n"
     ]
    }
   ],
   "source": [
    "overweightdf=df.loc[bmi>24.9]['gender'].reset_index(name='gender')\n",
    "print(overweightdf)\n",
    "overweightcount=overweightdf['index'].count()\n",
    "print(overweightcount)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "value = [underweightcount,normalweightcount,overweightcount]\n",
    "label = [\"underweight\",\"normalweight\",\"overweight\"]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([<matplotlib.patches.Wedge at 0x7fd48c58f310>,\n",
       "  <matplotlib.patches.Wedge at 0x7fd48c58ffd0>,\n",
       "  <matplotlib.patches.Wedge at 0x7fd48c592910>],\n",
       " [Text(2.1975710997540188, 0.10335018880443461, 'underweight'),\n",
       "  Text(1.7990818317693658, 1.2662166333599416, 'normalweight'),\n",
       "  Text(-1.8565790037127978, -1.180302674305534, 'overweight')],\n",
       " [Text(1.198675145320374, 0.056372830256964324, '1%'),\n",
       "  Text(0.9813173627832903, 0.6906636181963317, '17%'),\n",
       "  Text(-1.0126794565706168, -0.6438014587121095, '82%')])"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(value,labels=label,autopct='%0.0f%%',radius=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   gender  number\n",
      "0  female      12\n",
      "1    male       8\n"
     ]
    }
   ],
   "source": [
    "groupuw=underweightdf.groupby('gender')['gender'].count().reset_index(name='number')\n",
    "print(groupuw)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [],
   "source": [
    "value=groupuw['number']\n",
    "label=groupuw['gender']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([<matplotlib.patches.Wedge at 0x7fd48c570880>,\n",
       "  <matplotlib.patches.Wedge at 0x7fd48c566490>],\n",
       " [Text(-0.6798375443429164, 2.092324284928556, 'female'),\n",
       "  Text(0.679837740240451, -2.0923242212775626, 'male')],\n",
       " [Text(-0.37082047873249985, 1.1412677917792122, '60%'),\n",
       "  Text(0.3708205855857005, -1.1412677570604886, '40%')])"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(value,labels=label,autopct='%0.0f%%',radius=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   gender  number\n",
      "0  female     115\n",
      "1    male     106\n"
     ]
    }
   ],
   "source": [
    "groupnw=normalweightdf.groupby('gender')['gender'].count().reset_index(name='number')\n",
    "print(groupnw)\n",
    "value=groupnw['number']\n",
    "label=groupnw['gender']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([<matplotlib.patches.Wedge at 0x7fd48c80df70>,\n",
       "  <matplotlib.patches.Wedge at 0x7fd48c8176a0>],\n",
       " [Text(-0.14063621519589295, 2.195500274419335, 'female'),\n",
       "  Text(0.14063642075346328, -2.1955002612520125, 'male')],\n",
       " [Text(-0.07671066283412341, 1.197545604228728, '52%'),\n",
       "  Text(0.0767107749564345, -1.1975455970465523, '48%')])"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(value,labels=label,autopct='%0.0f%%',radius=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
